1. hero-form component
ng generate Heroform component

2. create the ff model with the name hero.ts:
export class Hero {

  constructor(
    public id: number,
    public name: string,
    public power: string,
    public alterEgo?: string
  ) {  }

}

3. add the ff in hero.form compo.ts:

import { Hero } from '../hero';

4.  add the ff in hero.form compo.ts:
 powers = ['Really Smart', 'Super Flexible',
            'Super Hot', 'Weather Changer'];

  model = new Hero(18, 'Dr IQ', this.powers[0], 'Chuck Overstreet');

  submitted = false;

  onSubmit() { this.submitted = true; }

5. add the ff method to hero.form.comp.ts:
  skyDog(): Hero {
    const myHero =  new Hero(42, 'SkyDog',
                           'Fetch any object at any distance',
                           'Leslie Rollover');
    console.log('My hero is called ' + myHero.name); // "My hero is called SkyDog"
    return myHero;
  }
6. add the ff in app.module.ts:
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

7. add the ff in app.module.ts in the import module part:
  CommonModule,
    FormsModule

8. put the ff in the app.ts:
<app-hero-form></app-hero-form>

9. add the ff in the style.css file:
@import url('https://unpkg.com/bootstrap@3.3.7/dist/css/bootstrap.min.css');

10. add the ff to the hero.form.html:
<div class="container">
    <div [hidden]="submitted">
      <h1>Hero Form</h1>
      <form (ngSubmit)="onSubmit()" #heroForm="ngForm">
        <div class="form-group">
          <label for="name">Name</label>
          <input type="text" class="form-control" id="name"
                 required
                 [(ngModel)]="model.name" name="name"
                 #name="ngModel">
          <div [hidden]="name.valid || name.pristine"
               class="alert alert-danger">
            Name is required
          </div>
        </div>
  
        <div class="form-group">
          <label for="alterEgo">Alter Ego</label>
          <input type="text" class="form-control" id="alterEgo"
                 [(ngModel)]="model.alterEgo" name="alterEgo">
        </div>
  
        <div class="form-group">
          <label for="power">Hero Power</label>
          <select class="form-control" id="power"
                  required
                  [(ngModel)]="model.power" name="power"
                  #power="ngModel">
            <option *ngFor="let pow of powers" [value]="pow">{{pow}}</option>
          </select>
          <div [hidden]="power.valid || power.pristine" class="alert alert-danger">
            Power is required
          </div>
        </div>
  
        <button type="submit" class="btn btn-success" [disabled]="!heroForm.form.valid">Submit</button>
        <button type="button" class="btn btn-default" (click)="newHero(); heroForm.reset()">New Hero</button>
        <i>with</i> reset
  
        &nbsp;&nbsp;
        <button type="button" class="btn btn-default" (click)="newHero()">New Hero</button>
        <i>without</i> reset
  
        <div>
          <hr>
          Name via form.controls = {{showFormControls(heroForm)}}
        </div>
       <!-- - -->
      </form>
    </div>
  
    <div [hidden]="!submitted">
      <h2>You submitted the following:</h2>
      <div class="row">
        <div class="col-xs-3">Name</div>
        <div class="col-xs-9">{{ model.name }}</div>
      </div>
      <div class="row">
        <div class="col-xs-3">Alter Ego</div>
        <div class="col-xs-9">{{ model.alterEgo }}</div>
      </div>
      <div class="row">
        <div class="col-xs-3">Power</div>
        <div class="col-xs-9">{{ model.power }}</div>
      </div>
      <br>
      <button type="button" class="btn btn-primary" (click)="submitted=false">Edit</button>
    </div>
  </div>

11. add the ff in the hero-form.ts:
showFormControls(form: any) {
    return form && form.controls.name &&
    form.controls.name.value; 
  }

  newHero() {
    this.model = new Hero(42, '', '');
  }