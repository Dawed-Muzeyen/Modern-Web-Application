1. add the ff in the hero.service.ts(getById methos):
/** GET hero by id. Will 404 if id not found */
getHero(id: number): Observable<Hero> {
  const url = `${this.heroesUrl}/${id}`;
  return this.http.get<Hero>(url).pipe(
    tap(_ => this.log(`fetched hero id=${id}`)),
    catchError(this.handleError<Hero>(`getHero id=${id}`))
  );
}


2. add the ff in the hero.detail.html for update:
<button type="button" (click)="save()">save</button>

3. add the ff in the hero.detail.ts for update:
save(): void {
  if (this.hero) {
    this.heroService.updateHero(this.hero)
      .subscribe(() => this.goBack());
  }
}

4. add the ff to the hero.service.ts(for update):
/** PUT: update the hero on the server */
updateHero(hero: Hero): Observable<any> {
  return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(
    tap(_ => this.log(`updated hero id=${hero.id}`)),
    catchError(this.handleError<any>('updateHero'))
  );
}

5. the httpOptions in the hero.service.ts:
httpOptions = {
  headers: new HttpHeaders({ 'Content-Type': 'application/json' })
};

